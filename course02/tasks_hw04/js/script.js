// Общие функции для заданий
const genRndArr = (n) => {
    const arr = [];

    for (let i = 0; i < n; i++) {

        arr.push(Math.round(Math.random() * 10));
    }

    return arr;
}


// # Задание 1
// Дан массив: `[1, 5, 4, 10, 0, 3]`
// Необходимо создать цикл, который будет выводить элементы массива до тех пор, пока не встретит значение 10.
// После вывода в консоль значения 10 цикл должен прекратить свою работу.
const exerсise1 = () => {

    const arr = [1, 5, 4, 10, 0, 3];

    for (let i = 0; i < arr.length; i++) {

        console.log(arr[i]);

        if (arr[i] === 10) break;

    }
}

// # Задание 2
// Дан массив: `[1, 5, 4, 10, 0, 3]`
// Найдите позицию числа 4 в этом массиве.
const exerсise2 = () => {

    const arr = [1, 5, 4, 10, 0, 3];

    console.log(arr.indexOf(4) + 1); // добавляю единицу, т.к. в задании указано найти именно позицию, а не индекс.
}

// # Задание 3
// Дан массив чисел: `[1, 3, 5, 10, 20]` 
// С помощью метода `join` выведите элементы массива через пробел (пустую строку ‘ ‘).
const exerсise3 = () => {

    const arr = [1, 3, 5, 10, 20];

    console.log(arr.join(' '));
}


// # Задание 4
// Создайте массив, состоящий из 10 значений. Значения массива необходимо сгенерировать
// с помощью метода `Math.random()` в диапазоне от 0 до 10.
// В данном массиве найдите все четные значения и добавьте их в новый массив. Результат
// работы программы необходимо вывести в консоль, это будет два массива: исходный массив и массив с четными значениями. 
const exerсise4 = () => {

    const arr = genRndArr(10);

    // const arrEven = [];

    // arr.forEach(elem => {

    // if (elem % 2 === 0 && elem !== 0) arrEven.push(elem);
    // });

    const arrEven = arr.filter(elem => elem % 2 === 0);

    console.log(arr);

    console.log(arrEven);
}


// # Задание 5
// С помощью вложенных циклов создайте многомерный массив вида: `[[1, 1, 1], [1, 1, 1], [1, 1, 1]]`
const exerсise5 = () => {

    const arr = [];

    for (let i = 0; i < 3; i++) {

        arr[i] = [];

        for (let j = 0; j < 3; j++) {

            arr[i][j] = 1;
        }
    }
    console.log(arr);
}

// # Задание 6
// Дан массив: `[1, 1, 1]`
// Добавьте в конец массива значения 2, 2, 2.
const exercise6 = () => {

    const arr = [1, 1, 1];

    for (let i = 0; i < 3; i++) {

        arr.push(2);

    }
    console.log(arr);
}

// # Задание 7
// Дан массив: `[9, 8, 7, 'a', 6, 5]`
// С помощью метода `sort` отсортируйте массив и удалите букву ‘a’ из данного массива. В результате работы программы вывести массив, состоящий из цифр.
const exercise7 = () => {

    const arr = [9, 8, 7, 'a', 6, 5];

    arr.sort().pop();

    console.log(arr);
}

// # Задание 8
// Дан массив: `[9, 8, 7, 6, 5]`
// Пользователь с клавиатуры вводит число от 1 до 10 (использовать `prompt()`). Необходимо проверить, содержится ли введенное пользователем число в данном массиве.
const exercise8 = () => {

    const arr = [9, 8, 7, 6, 5];

    const num = +prompt('Введите желаемое число');

    if (isNaN(num)) {

        alert('Вводить можно только число!');

    } else {

        if (arr.includes(num)) {

            alert('Число есть в массиве!')

        } else {

            alert('Такого числа в массиве нет.');
        }
    }
}

// # Задание 9
// Дана строка: `‘abcdef’`
// Необходимо, чтобы программа вывела в консоль `‘fedcba’`
const exercise9 = () => {

    const str = 'abcdef';

    console.log(str.split('').reverse().join(''));
}

// # Задание 10
// Создайте массив, состоящий из 6 элементов.  Элементы массива необходимо сгенерировать с помощью `Math.random()` в диапазоне от 1 до 10.
// Требуется найти среднее арифметическое этих цифр, результат программы вывести в консоль.
// *Для получения среднего арифметического необходимо все значения массива сложить и разделить на количество элементов в массиве.*
const exercise10 = () => {

    const arr = genRndArr(6);

    console.log(arr);

    // let sum = 0;

    // for (let num of arr) {

    // sum += num;
    // }

    let sum = arr.reduce((a, b) => a + b);

    console.log(sum / arr.length);
}

// # Задание 11
// Дан массив: `[[1, 2, 3,],[4, 5, 6]]`
// Выведите в консоль массив вида: `[1, 2, 3, 4, 5, 6]`
const exercise11 = () => {

    const arr = [[1, 2, 3,], [4, 5, 6]];

    console.log(arr.flat());
}

// # Задание 12
// Создайте массив с произвольными числами (диапазон от 1 до 10). Переберите его с помощью цикла `for` и в каждой итерации выведите в консоль сумму текущего и следующего элементов массива.
// Следующий элемент массива можно получить с помощью индекса: `i + 1`. Обратите внимание, что у последнего элемента нет следующего.
const exercise12 = () => {

    const arr = genRndArr(10);

    console.log(arr); // выведем массив для наглядности и проверки правильности работы

    for (let i = 0; i < arr.length; i++) {

        if (i === arr.length - 1) {

            console.log(`${arr[i]} - это последний элемент массива, складывать его не с чем!`);

        } else {

            console.log(arr[i] + arr[i + 1]);
        }
    }
}


// # Задание 13 _ Работа с макетом
const exercise13 = () => {

    window.open('http://games.skypro.felico.ru');
}


// # Дополнительная практика
// *Вы можете сделать её по желанию и отправить на проверку наставникам.*
// ## *Задание 14
// С помощью рекурсии необходимо создать функцию, которая будет считать 2 в степени **n.** Формула, по которой рассчитывается 2 в степени **n:** `2^n = 2^(n-1) * 2`
const exercise14 = () => {

    const num = +prompt('Введите степень в которую будем возводить 2.')

    function pow(n) {

        return n === 1 ? 2 : pow(n - 1) * 2;
    }

    if (isNaN(num)) {

        alert('Можно вводить только число!');

    } else {

        alert(`2 в степени ${num} будет равно ${pow(num)}`);
    }
}

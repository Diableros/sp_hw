'use strict';

const cursor = document.querySelector('.cursor-pointer');

const mouseMove = function (e) {
    let x = e.clientX;
    let y = e.clientY;
    cursor.style.left = x + 'px';
    cursor.style.top = y + 'px';
};

document.addEventListener('mousemove', mouseMove);

function curVis() {
    cursor.style.display = 'block';
}

function curNoVis() {
    cursor.style.display = 'none';
}


// Не смог придумать, как тут можно использовать логические операторы || (логическое ИЛИ) и && (логическое И).*
const seasons = () => {

    const winter = [12, 1, 2];
    const spring = [3, 4, 5];
    const summer = [6, 7, 8];
    const autumn = [9, 10, 11];

    function seasonName(month) {
        if (winter.includes(month)) {

            return 'Зима';

        } else if (spring.includes(month)) {

            return 'Весна';

        } else if (summer.includes(month)) {

            return 'Лето';

        } else if (autumn.includes(month)) {

            return 'Осень';

        } else {

            return 'Введен неправильный номер';
        }
    }
    // Приятнее получать ответ в alert(), нежели в консоль, решил реализовать так :)
    // но если что, раскомментить не долго %)
    alert(seasonName(+prompt('Введите номер месяца.')));
    // console.log(seasonName(+prompt('Введите номер месяца.')));

}

const memorize = () => {

    let arr = ['Яблоко', 'Груша', 'Дыня', 'Виноград', 'Персик', 'Апельсин', 'Мандарин'];

    alert(`Запомни слова: \n-------------------------------------------------------------------------------\n${arr.sort(() => Math.random() - 0.5).join(' - ')}\n-------------------------------------------------------------------------------\nЕсли запомнил - жми ОК!`);

    console.log(arr); // для проверки правильности работы игры

    const userAnswer1 = prompt('Какое было первое слово?');

    const userAnswer2 = prompt('Какое было последнее слово?');

    if (arr[0] === userAnswer1 && arr[arr.length - 1] === userAnswer2) {

        alert('Поздравляю! Ты угадал!');

    } else if (arr[0] === userAnswer1 || arr[arr.length - 1] === userAnswer2) {

        alert('Ты был близко к победе!');

    } else {

        alert('Не угадал. Попробуй ещё раз.');
    }
}

const riddles = () => {

    // инициализируем массив с объектами загадок, правильным ответом и подсказками
    const data = [
        { text: 'Зимой и летом - одним цветом', answer: 'Ель', help: ['это дерево', 'оно зеленое круглый год'] },
        { text: 'Дед - в сто шуб одет', answer: 'Лук', help: ['в слове три буквы', 'кто его раздевает, тот слёзы проливает'] },
        { text: 'Висит груша - нельзя скушать', answer: 'Лампочка', help: ['она по форме один в один с грушей', 'она сделана из стекла'] },
        { text: 'Два конца, два кольца, посредине гвоздик', answer: 'Ножницы', help: ['это режущий предмет', 'это главный инструмент портного'] },
        { text: 'Не огонь, но жжется', answer: 'Крапива', help: ['это многолетнее растение', 'из него можно сварить суп'] },
        { text: 'Красна девица сидит в темнице, а коса на улице', answer: 'Морковь', help: ['она имеет коническую форму', 'она одержит много каротина'] },
        { text: 'Жидкое, но не вода, белое, но не снег', answer: 'Молоко', help: ['это добавляют в кофе', 'из него делают сыр'] },
        { text: 'К нам приехали с бахчи, полосатые мячи', answer: 'Арбуз', help: ['это самая большая ягода', 'он внутри красный и сладкий'] },
        { text: 'Без рук без топоренка построена избёнка', answer: 'Гнездо', help: ['оно бычно находится на дереве', 'это птичий дом'] },
        { text: 'Летит, но не птица, воет, но не зверь', answer: 'Ветер', help: ['он воет в окнах', 'он подгоняет паруса'] },
        { text: 'Разноцветное коромысло над рекою повисло', answer: 'Радуга', help: ['у неё семь цветов', 'у неё дугообразная форма'] },
        { text: 'Без окон без дверей полна горница людей', answer: 'Огурец', help: ['это овощь', 'он зеленого цвета'] }
    ];

    // забираем в переменную одну из загадок выбранную "случайным" образом
    const riddle = data[Math.floor(Math.random() * 12)];

    console.log(riddle.answer); // выводим правильный ответ в консоль для проверки работы кода

    // загадываем загадку и получаем первый ответ от пользователя
    let userAnswer = prompt(`Отгадай загадку!\n"${riddle.text}"\nТвоя отгадка:`);

    let tryCount = 0; // инициализируем счётчик дополнительных попыток

    // запускаем цикл пока выполняются условия:
    // ответ не верный и счетчик доп попыток меньше 2 и пользователь не нажал кнопку отмены
    while (userAnswer !== riddle.answer && tryCount < 2 && userAnswer !== null) {
        // повторяем текст загадки, подсказку выдёргиваем из объекта, подсказку берем по индексу равному номеру попытки
        userAnswer = prompt(`Не угадал, попробуй ещё раз!\nДаю подсказку: ${riddle.help[tryCount]}.\nТвоя отгадка:`);
        // плюсуем счётчик
        tryCount++;
    }
    // когда ответ верный или кончились попытки проверяем
    if (userAnswer === riddle.answer) { // если ответ верный

        alert('Поздравляю, ты угадал!'); // подзравляем пользователя 

    } else if (userAnswer === null) { // если пользователь нажал кнопку "Отмена"

        alert('Передумал угадывать? Как хочешь...'); // посылаем его подальше

    } else { // оставшийся случай - это только закончившиемся попытки

        alert('К сожалению попытки закончились. Попробуй в другой раз!'); // сообщаем пользователю, что он неудачник
    }
}